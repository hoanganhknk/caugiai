import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

class Result {

    /*
     * Complete the 'isBalanced' function below.
     *
     * The function is expected to return a STRING.
     * The function accepts STRING s as parameter.
     */

    public static String isBalanced(String s) {
    // Write your code here
        Stack st = new Stack();
        int ans = 1;
        for(int i = 0; i < s.length(); i ++){
            char temp = s.charAt(i);
            if(temp == '{' || temp == '[' || temp == '('){
                st.push(temp);
                continue;
            }
            if(st.empty()){
                ans = 0;
                break;
            }
            if(temp == ')'){
                if(st.peek().equals('(')){
                    st.pop();
                    continue;
                }
                else{
                    ans = 0;
                    break;
                }
            }
            if(temp == ']'){
                if(st.peek().equals('[')){
                    st.pop();
                    continue;
                }
                else{
                    ans = 0;
                    break;
                }
            }
            if(temp == '}'){
                if(st.peek().equals('{')){
                    st.pop();
                    continue;
                }
                else{
                    ans = 0;
                    break;
                }
            }
        }
        if(st.empty() && ans == 1){
            return "YES";
        }
        else{
            return "NO";
        }
        
    }


}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int t = Integer.parseInt(bufferedReader.readLine().trim());

        for (int tItr = 0; tItr < t; tItr++) {
            String s = bufferedReader.readLine();

            String result = Result.isBalanced(s);

            bufferedWriter.write(result);
            bufferedWriter.newLine();
        }

        bufferedReader.close();
        bufferedWriter.close();
    }
}
