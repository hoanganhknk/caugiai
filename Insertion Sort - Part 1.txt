import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

class Result {

    /*
     * Complete the 'insertionSort1' function below.
     *
     * The function accepts following parameters:
     *  1. INTEGER n
     *  2. INTEGER_ARRAY arr
     */

    public static void insertionSort1(int n, List<Integer> arr){
        int temp = arr.get(n-1);
        int index = n-2;
        while(index >= 0){
            if(arr.get(index) <= temp){
                arr.set(index + 1, temp);
                break;
            }
            else{
                arr.set(index + 1, arr.get(index));
                for (Integer integer : arr) {
                    System.out.print(integer + " ");
                }
                System.out.println();
            }
            index--;
        }
        if(index < 0){
            arr.set(index + 1, temp);
        }
        for (Integer integer : arr) {
            System.out.print(integer + " ");
        }
        System.out.println();
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));

        int n = Integer.parseInt(bufferedReader.readLine().trim());

        String[] arrTemp = bufferedReader.readLine().replaceAll("\\s+$", "").split(" ");

        List<Integer> arr = new ArrayList<>();

        for (int i = 0; i < n; i++) {
            int arrItem = Integer.parseInt(arrTemp[i]);
            arr.add(arrItem);
        }

        Result.insertionSort1(n, arr);

        bufferedReader.close();
    }
}
